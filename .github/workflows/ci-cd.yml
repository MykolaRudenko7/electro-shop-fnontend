name: Deploy Next.js Frontend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_LOCAL_FRONTEND }}" > .env.local

      - name: Run prettier
        run: npm run prettier

      - name: Run linter
        run: npm run lint:all

      - name: Run test
        run: npm run test:jest -- -u

      - name: Build Next.js app
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_FRONTEND }}

      - name: Build and push Docker image
        run: |
          docker build -t mykolarud/frontend_img:latest .
          docker push mykolarud/frontend_img:latest

      - name: Deploy Docker Image
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_DOCKER_HOOK_URL }}
        run: |
          curl "$deploy_url"
